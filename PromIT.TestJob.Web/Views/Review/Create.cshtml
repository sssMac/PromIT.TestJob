@model AddReviewViewModel

@{
    ViewBag.Title = "Написать отзыв";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                </div>
                <div class="card-body">

                    @using (Html.BeginForm("Create", "Review", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName)
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @value = "1123" , required = true})
                            @Html.ValidationMessageFor(model => model.UserName)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgName)
                            @Html.TextBoxFor(model => model.OrgName, new { @class = "form-control" , required = true})
                            @Html.ValidationMessageFor(model => model.OrgName)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrgAddress)
                            @Html.TextBoxFor(model => model.OrgAddress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OrgAddress)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.WhatLike)
                            @Html.TextAreaFor(model => model.WhatLike, new { @class = "form-control", rows = 3 , required = true})
                            @Html.ValidationMessageFor(model => model.WhatLike)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.WhatDislike)
                            @Html.TextAreaFor(model => model.WhatDislike, new { @class = "form-control", rows = 3 })
                            @Html.ValidationMessageFor(model => model.WhatDislike)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Rating)
                            <div class="rating">

                                @Html.RadioButtonFor(model => model.Rating, 5, new { name = "rating", id = "star5"})
                                <label for="star5"><i class="far fa-star"></i></label>
                                @Html.RadioButtonFor(model => model.Rating, 4, new { name = "rating", id = "star4"})
                                <label for="star4"><i class="far fa-star"></i></label>
                                @Html.RadioButtonFor(model => model.Rating, 3, new { name = "rating", id = "star3"})
                                <label for="star3"><i class="far fa-star"></i></label>
                                @Html.RadioButtonFor(model => model.Rating, 2, new { name = "rating", id = "star2"})
                                <label for="star2"><i class="far fa-star"></i></label>
                                @Html.RadioButtonFor(model => model.Rating, 1, new { name = "rating", id = "star1"})
                                <label for="star1"><i class="far fa-star"></i></label>
                            </div>
                            @Html.ValidationMessageFor(model => model.Rating)

                        </div>
                        



                        <button type="submit" class="btn btn-primary">Отправить</button>
                        <a class="btn btn-primary float-end" href="/">Отмена</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $('.rating input').on('change', function () {
                var rating = $(this).val();
                // Отправить значение рейтинга на сервер, например, с помощью AJAX или в форме
                console.log('Рейтинг: ' + rating);
                // Тут можно отправить значение рейтинга на сервер
            });
        });

        
    </script>
}
